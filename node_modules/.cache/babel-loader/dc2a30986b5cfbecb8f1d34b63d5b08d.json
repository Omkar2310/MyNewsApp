{"ast":null,"code":"var _jsxFileName = \"/home/omkar/webdev/inshorts-clone/src/components/drawer/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\"; // import ListItemIcon from \"@material-ui/core/ListItemIcon\";\n\nimport ListItemText from \"@material-ui/core/ListItemText\"; // import InboxIcon from \"@material-ui/icons/MoveToInbox\";\n// import MailIcon from \"@material-ui/icons/Mail\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\"; // added\n\nimport { createMuiTheme, ThemeProvider, useMediaQuery } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  }\n});\nexport default function Drawer() {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    left: false\n  });\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const theme = React.useMemo(() => createMuiTheme({\n    palette: {\n      type: prefersDarkMode ? \"dark\" : \"light\"\n    }\n  }), [prefersDarkMode]);\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event && event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === \"top\" || anchor === \"bottom\"\n    }),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleDrawer(\"left\", true),\n        children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwipeableDrawer, {\n        anchor: \"left\",\n        open: state[\"left\"],\n        onClose: toggleDrawer(\"left\", false),\n        onOpen: toggleDrawer(\"left\", true),\n        children: list(\"left\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, \"left\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Drawer, \"ldGWkAlEjr6cbmIQgrrpWqhE0AU=\", false, function () {\n  return [useStyles, useMediaQuery];\n});\n\n_c = Drawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Drawer\");","map":{"version":3,"sources":["/home/omkar/webdev/inshorts-clone/src/components/drawer/index.js"],"names":["React","clsx","makeStyles","SwipeableDrawer","Button","List","Divider","ListItem","ListItemText","MenuIcon","createMuiTheme","ThemeProvider","useMediaQuery","useStyles","list","width","fullList","Drawer","classes","state","setState","useState","left","prefersDarkMode","theme","useMemo","palette","type","toggleDrawer","anchor","open","event","key"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\n// import ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n// import InboxIcon from \"@material-ui/icons/MoveToInbox\";\n// import MailIcon from \"@material-ui/icons/Mail\";\nimport MenuIcon from \"@material-ui/icons/Menu\"; // added\n\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  useMediaQuery,\n} from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n});\n\nexport default function Drawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    left: false,\n  });\n\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    ></div>\n  );\n\n  return (\n    <div>\n      <React.Fragment key={\"left\"}>\n        <Button onClick={toggleDrawer(\"left\", true)}>\n          <MenuIcon />\n        </Button>\n        <SwipeableDrawer\n          anchor={\"left\"}\n          open={state[\"left\"]}\n          onClose={toggleDrawer(\"left\", false)}\n          onOpen={toggleDrawer(\"left\", true)}\n        >\n          {list(\"left\")}\n        </SwipeableDrawer>\n      </React.Fragment>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}