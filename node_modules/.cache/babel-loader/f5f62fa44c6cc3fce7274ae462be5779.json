{"ast":null,"code":"var _jsxFileName = \"/home/omkar/webdev/inshorts-clone/src/components/drawer/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { createMuiTheme, ThemeProvider, useMediaQuery } from \"@material-ui/core\";\nimport categories from \"../../data/category\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  list: {\n    width: 200,\n    paddingLeft: 10,\n    paddingRight: 5\n  },\n  fullList: {\n    width: \"auto\"\n  }\n});\nexport default function Drawer({\n  setCategory\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    left: false\n  });\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const theme = React.useMemo(() => createMuiTheme({\n    palette: {\n      type: prefersDarkMode ? \"dark\" : \"light\"\n    }\n  }), [prefersDarkMode]);\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event && event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === \"top\" || anchor === \"bottom\"\n    }),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: categories.map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        style: {\n          height: 40,\n          borderRadius: 3\n        },\n        button: true,\n        onClick: () => setCategory(text),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleDrawer(\"left\", true),\n        children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(SwipeableDrawer, {\n          anchor: \"left\",\n          open: state[\"left\"],\n          onClose: toggleDrawer(\"left\", false),\n          onOpen: toggleDrawer(\"left\", true),\n          children: list(\"left\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, \"left\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Drawer, \"ldGWkAlEjr6cbmIQgrrpWqhE0AU=\", false, function () {\n  return [useStyles, useMediaQuery];\n});\n\n_c = Drawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Drawer\");","map":{"version":3,"sources":["/home/omkar/webdev/inshorts-clone/src/components/drawer/index.js"],"names":["React","clsx","makeStyles","SwipeableDrawer","Button","List","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","MenuIcon","createMuiTheme","ThemeProvider","useMediaQuery","categories","useStyles","list","width","paddingLeft","paddingRight","fullList","Drawer","setCategory","classes","state","setState","useState","left","prefersDarkMode","theme","useMemo","palette","type","toggleDrawer","anchor","open","event","key","map","text","index","height","borderRadius"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SACEC,cADF,EAEEC,aAFF,EAGEC,aAHF,QAIO,mBAJP;AAKA,OAAOC,UAAP,MAAuB,qBAAvB;;AAEA,MAAMC,SAAS,GAAGf,UAAU,CAAC;AAC3BgB,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,GADH;AAEJC,IAAAA,WAAW,EAAE,EAFT;AAGJC,IAAAA,YAAY,EAAE;AAHV,GADqB;AAM3BC,EAAAA,QAAQ,EAAE;AACRH,IAAAA,KAAK,EAAE;AADC;AANiB,CAAD,CAA5B;AAWA,eAAe,SAASI,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAAiC;AAAA;;AAC9C,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoB3B,KAAK,CAAC4B,QAAN,CAAe;AACvCC,IAAAA,IAAI,EAAE;AADiC,GAAf,CAA1B;AAIA,QAAMC,eAAe,GAAGf,aAAa,CAAC,8BAAD,CAArC;AAEA,QAAMgB,KAAK,GAAG/B,KAAK,CAACgC,OAAN,CACZ,MACEnB,cAAc,CAAC;AACboB,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEJ,eAAe,GAAG,MAAH,GAAY;AAD1B;AADI,GAAD,CAFJ,EAOZ,CAACA,eAAD,CAPY,CAAd;;AAUA,QAAMK,YAAY,GAAG,CAACC,MAAD,EAASC,IAAT,KAAmBC,KAAD,IAAW;AAChD,QACEA,KAAK,IACLA,KAAK,CAACJ,IAAN,KAAe,SADf,KAECI,KAAK,CAACC,GAAN,KAAc,KAAd,IAAuBD,KAAK,CAACC,GAAN,KAAc,OAFtC,CADF,EAIE;AACA;AACD;;AAEDZ,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACU,MAAD,GAAUC;AAAtB,KAAD,CAAR;AACD,GAVD;;AAYA,QAAMnB,IAAI,GAAIkB,MAAD,iBACX;AACE,IAAA,SAAS,EAAEnC,IAAI,CAACwB,OAAO,CAACP,IAAT,EAAe;AAC5B,OAACO,OAAO,CAACH,QAAT,GAAoBc,MAAM,KAAK,KAAX,IAAoBA,MAAM,KAAK;AADvB,KAAf,CADjB;AAIE,IAAA,IAAI,EAAC,cAJP;AAKE,IAAA,OAAO,EAAED,YAAY,CAACC,MAAD,EAAS,KAAT,CALvB;AAME,IAAA,SAAS,EAAED,YAAY,CAACC,MAAD,EAAS,KAAT,CANzB;AAAA,4BAQE,QAAC,IAAD;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF,eAWE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE,QAAC,IAAD;AAAA,gBACGpB,UAAU,CAACwB,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBACd,QAAC,QAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,EAAV;AAAcC,UAAAA,YAAY,EAAE;AAA5B,SADT;AAEE,QAAA,MAAM,MAFR;AAGE,QAAA,OAAO,EAAE,MAAMpB,WAAW,CAACiB,IAAD,CAH5B;AAAA,+BAME,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA;AANF,SAIOA,IAJP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AA4BA,sBACE;AAAA,2BACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEN,YAAY,CAAC,MAAD,EAAS,IAAT,CAA7B;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAEJ,KAAtB;AAAA,+BACE,QAAC,eAAD;AACE,UAAA,MAAM,EAAE,MADV;AAEE,UAAA,IAAI,EAAEL,KAAK,CAAC,MAAD,CAFb;AAGE,UAAA,OAAO,EAAES,YAAY,CAAC,MAAD,EAAS,KAAT,CAHvB;AAIE,UAAA,MAAM,EAAEA,YAAY,CAAC,MAAD,EAAS,IAAT,CAJtB;AAAA,oBAMGjB,IAAI,CAAC,MAAD;AANP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,OAAqB,MAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA7EuBK,M;UACNN,S,EAKQF,a;;;KANFQ,M","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport categories from \"../../data/category\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: 200,\n    paddingLeft: 10,\n    paddingRight: 5,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n});\n\nexport default function Drawer({ setCategory }) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    left: false,\n  });\n\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        <ListItem>Categories</ListItem>\n      </List>\n      <Divider />\n      <List>\n        {categories.map((text, index) => (\n          <ListItem\n            style={{ height: 40, borderRadius: 3 }}\n            button\n            onClick={() => setCategory(text)}\n            key={text}\n          >\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      <React.Fragment key={\"left\"}>\n        <Button onClick={toggleDrawer(\"left\", true)}>\n          <MenuIcon />\n        </Button>\n        <ThemeProvider theme={theme}>\n          <SwipeableDrawer\n            anchor={\"left\"}\n            open={state[\"left\"]}\n            onClose={toggleDrawer(\"left\", false)}\n            onOpen={toggleDrawer(\"left\", true)}\n          >\n            {list(\"left\")}\n          </SwipeableDrawer>\n        </ThemeProvider>\n      </React.Fragment>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}